#
# File Name: sysctl.conf
# File Path: /etc/sysctl.conf
#
# Author: J1n H4ng<jinhang@mail.14bytes.com>
# Date: April 11, 2024
#
# Last Editor: J1n H4ng<jinhang@mail.14bytes.com>
# Last Modified:  April 11, 2024
#
# Description: Linux 系统内核和网络优化设置
# Source URL:
#   - https://www.cnblogs.com/tingxin/p/12606166.html
#   - https://blog.csdn.net/alwaysbefine/article/details/123858239
#

# 魔法请求键，具体文档内容查看：https://www.kernel.org/doc/html/latest/translations/zh_CN/admin-guide/sysrq.html
# 0 - 完全不能使用 SysRq 键
# 1 - 可以使用 SysRq 键的所有功能
# >1 - 对于允许的 SysRq 键功能的比特掩码，具体查看文档内容
kernel.sysrq = 0

# 内核参数，用于决定是否在生成核心转储文件是是否包含进程的 PID 信息。
# 0 - 生成核心转储文件时不包含进程的 PID 信息
# 1 - 生成核心转储文件时包含进程的 PID 信息
# 这个参数用于区分不同的核心转储文件，使得在系统中存在多个转储文件时更容易区分它们的来源进程
# > 核心转储文件介绍：
# > 核心转储文件是在 Unix 和 类 Unix 系统上发生程序崩溃时生成的文件。当一个程序因为某种原因（比如内存错误、段错误等）异常终止时。
# > 操作系统会将程序的内存状态以及其他相关信息写入一个特殊的文件中，这个文件就是核心转储文件。
# > 核心转储文件包含了程序崩溃时的内存映像、程序计数器值、寄存器内容等信息，这些信息对于诊断程序崩溃的原因非常有用。
# > 通常，核心转储文件的生成是由操作系统内核自动完成的，但是可以通过配置操作系统的参数来控制核心转储文件的生成方式和存储位置。
# > 在一些系统中，核心转储文件可能会被用于调试分析程序崩溃的原因，或者用于改进程序的稳定性和可靠性。
kernel.core_uses_pid = 1
# 脚本内容:
# ------------Start Scripts------------
#
# #!/bin/bash
# if [! -d "/var/coredump" ]; then
#     mkdir /var/coredump
# fi
# gzip > "/var/coredump/$1"
#
# ------------End Scripts------------
#
# 最终在 /var/coredump 目录下生成 core_<线程名>_<线程ID>_<进程ID>_sig_<信号值>_time_<coredump时间>.gz 文件
# kernel.core_pattern = | /usr/bin/coredump_helper.sh core_%e_%I_%p_sig_%s_time_%t.gz


kernel.msgmnb = 65536
kernel.msgmax = 65535
kernel.shmmax =
kernel.shmall =

fs.file-max =

vm.overcommit_memory = 0
vm.swappiness = 0

net.ipv4.ip_forward = 0

net.ipv4.conf.default.rp_filter =
net.ipv4.conf.all.rp_filter =

net.ipv4.icmp_echo_ignore_all=
net.ipv4.icmp_echo_ignore_broadcasts =

net.ipv4.conf.default.accept_source_route = 0

net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.tcp_sack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 10240 87380 12582912
net.ipv4.tcp_wmem = 10240 87380 12582912
net.ipv4.tcp_men = 94500000 915000000 927000000

net.ipv4.tcp_max_orphans = 3276800
net.ipv4.tcp_max_syn_backlog = 262144

net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_fin_timeout = 1
net.ipv4.tcp_keepalive_time = 30
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.ip_local_port_range = 1024 65000
net.ipv4.route.gc_timeout = 100

net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1

net.core.wmen_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 262144
net.core.somaxconn = 40960

net.netfilter.nf_conntrack_max = 6553500
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120
net.netfilter.nf_conntrack_tcp_timeout_established = 3600
net.nf_conntrack_max = 6553500
